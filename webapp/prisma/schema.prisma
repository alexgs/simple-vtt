generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id(map: "accounts_pk") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId            String   @map("user_id") @db.Uuid
  type              String
  provider          String
  providerAccountId String   @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "accounts_users_id_fk")

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model flyway_schema_history {
  @@ignore()
}

model Session {
  id           String   @id(map: "sessions_pk") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId       String   @map("user_id") @db.Uuid
  sessionToken String   @unique @map("session_token")
  expires      DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "sessions_users_id_fk")

  @@map("sessions")
}

model User {
  id            String    @id(map: "users_pk") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique(map: "verification_token_key")
  expires    DateTime
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@unique([identifier, token], map: "verification_identifier_token_key")
  @@map("verification_tokens")
}
